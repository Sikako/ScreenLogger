@page "/call-web-api"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Call web API from a Blazor Server Razor component</h1>

@if (getStatusError)
{
    <p>Unable to get branches from GitHub. Please try again later.</p>
}
else
{
    <p>myPrtScStatus：@myPrtScStatus.Status</p>
    <p>myPrtScToken：@myPrtScStatus.Token</p>
}


@code {
    private PrtScStatus myPrtScStatus = new PrtScStatus();
    private bool getStatusError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:7084/api/PrtSc/GetPrtSc");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
             
             using var responseStream = await response.Content.ReadAsStreamAsync();
            myPrtScStatus = await JsonSerializer.DeserializeAsync
                <PrtScStatus>(responseStream);
            

        }
        else
        {
            getStatusError = true;
        }

        shouldRender = true;
    }

    public class PrtScStatus
    {
        [JsonPropertyName("status")]
        public string Status { get; set; }

        [JsonPropertyName("token")]
        public string Token { get; set; }
    }


}