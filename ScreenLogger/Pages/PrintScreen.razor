@page "/printscreen"
@using PrtScModels.Models;
@using ScreenLogger.Data;
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Net.Http
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components.Forms
@inject PrtScAPIService Api
@inject IHttpClientFactory ClientFactory
@inject HttpClient Http

<PageTitle>PrintScreen</PageTitle>
<EditForm Model="@myForm" OnValidSubmit="@postApi">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h4> 選擇狀態 - @myForm.Status</h4>
    <InputRadioGroup Name="StatusSelect" @bind-Value="myForm.Status">
        @foreach (var status in statusList){
        <InputRadio Value="@status" />@status<br />
        }
    </InputRadioGroup>
    @if(myForm.Status == "UP"){
      <br /> <p>Line Notify Token：</p><InputText id="token" @bind-Value="myForm.Token"></InputText><br /><br />
    }

    <button type="submit" class="btn btn-success">更新狀態</button>
</EditForm>
<h5>@returnStatus</h5>
<br />
<hr />
<p><span>螢幕截圖狀態：@myPrtScStatus.Status</span></p>
<p>Token：@myPrtScStatus.Token</p>

<h1>@myInt</h1>


@code {
    public PrtScStatus myPrtScStatus = new();
    private bool getStatusError;
    private bool shouldRender;
    private string? myInt;
    private string? returnStatus;
    private List<string> statusList = new List<string>() { "UP", "DOWN" };
    private FormModel myForm = new();


    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        //myInt = await Api.GetInt();
        await getApi();
    }

    private async Task getApi(){
        var response = await Api.GetPrtSc();
        if (response.IsSuccessStatusCode)
        {
            var responseS = await response.Content.ReadAsStringAsync();
            myPrtScStatus = JsonConvert.DeserializeObject<PrtScStatus>(responseS);
            //using var responseStream = await response.Content.ReadAsStreamAsync();
            //myPrtScStatus = await JsonSerializer.DeserializeAsync<PrtScStatus>(responseStream)!;
        }
        else
        {
            getStatusError = true;
        }
        shouldRender = true;
    }

    private async Task postApi(){
        var response = await Api.PostPrtSc(myForm.Status, myForm.Token);
        await getApi();
    }

    /*
    private void shift_status(){
        shouldRender = true;
        myPrtScStatus.Status = (myPrtScStatus.Status == "UP") ? "DOWN" : "UP";
    }
    */
}